/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/auth/Login': RouteRecordInfo<'/auth/Login', '/auth/Login', Record<never, never>, Record<never, never>>,
    '/auth/Registrer': RouteRecordInfo<'/auth/Registrer', '/auth/Registrer', Record<never, never>, Record<never, never>>,
    '/configuracoes/Configuracoes': RouteRecordInfo<'/configuracoes/Configuracoes', '/configuracoes/Configuracoes', Record<never, never>, Record<never, never>>,
    '/dashboards/Relatorios': RouteRecordInfo<'/dashboards/Relatorios', '/dashboards/Relatorios', Record<never, never>, Record<never, never>>,
    '/estoques/Movimentacao': RouteRecordInfo<'/estoques/Movimentacao', '/estoques/Movimentacao', Record<never, never>, Record<never, never>>,
    '/Home': RouteRecordInfo<'/Home', '/Home', Record<never, never>, Record<never, never>>,
    '/produtos/CadastroProdutos': RouteRecordInfo<'/produtos/CadastroProdutos', '/produtos/CadastroProdutos', Record<never, never>, Record<never, never>>,
    '/produtos/Produtos': RouteRecordInfo<'/produtos/Produtos', '/produtos/Produtos', Record<never, never>, Record<never, never>>,
    '/usuarios/Profile': RouteRecordInfo<'/usuarios/Profile', '/usuarios/Profile', Record<never, never>, Record<never, never>>,
    '/usuarios/UserManagementPage': RouteRecordInfo<'/usuarios/UserManagementPage', '/usuarios/UserManagementPage', Record<never, never>, Record<never, never>>,
    '/usuarios/UserManagementPageTyped': RouteRecordInfo<'/usuarios/UserManagementPageTyped', '/usuarios/UserManagementPageTyped', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/auth/Login.vue': {
      routes: '/auth/Login'
      views: never
    }
    'src/pages/auth/Registrer.vue': {
      routes: '/auth/Registrer'
      views: never
    }
    'src/pages/configuracoes/Configuracoes.vue': {
      routes: '/configuracoes/Configuracoes'
      views: never
    }
    'src/pages/dashboards/Relatorios.vue': {
      routes: '/dashboards/Relatorios'
      views: never
    }
    'src/pages/estoques/Movimentacao.vue': {
      routes: '/estoques/Movimentacao'
      views: never
    }
    'src/pages/Home.vue': {
      routes: '/Home'
      views: never
    }
    'src/pages/produtos/CadastroProdutos.vue': {
      routes: '/produtos/CadastroProdutos'
      views: never
    }
    'src/pages/produtos/Produtos.vue': {
      routes: '/produtos/Produtos'
      views: never
    }
    'src/pages/usuarios/Profile.vue': {
      routes: '/usuarios/Profile'
      views: never
    }
    'src/pages/usuarios/UserManagementPage.vue': {
      routes: '/usuarios/UserManagementPage'
      views: never
    }
    'src/pages/usuarios/UserManagementPageTyped.vue': {
      routes: '/usuarios/UserManagementPageTyped'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
