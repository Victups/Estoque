import{a as m,A as l}from"./uf.service-Bn8JpA_W.js";import{P as h,L as _}from"./product.service-DE7QUhp7.js";import{L as y}from"./VAutocomplete-e8hwRa83.js";import{U as A}from"./user.service-BiiNyKR8.js";class M{endpoint="/movimentacao_estoque";async getAll(){try{const t=await m.get(this.endpoint);return new l(t.data).get()}catch{throw new Error("Erro ao buscar movimentações")}}async getAllEnriched(){try{const[t,r,o,a,n]=await Promise.all([this.getAll(),h.getAll(),A.getAll(),y.getAll(),_.getAll()]),i=new Map(r.map(e=>[e.id,e])),d=new Map(o.map(e=>[e.id,e])),u=new Map(a.map(e=>[e.id,e])),p=new Map(n.map(e=>[e.id,e]));return t.map(e=>{const w=i.get(e.id_produto),g=d.get(e.id_usuario),v=u.get(e.id_lote),s=e.id_localizacao_origem?p.get(e.id_localizacao_origem):null,c=e.id_localizacao_destino?p.get(e.id_localizacao_destino):null;return{...e,produto_nome:w?.nome,usuario_nome:g?.nome,lote_codigo:v?.codigo_lote,localizacao_origem_nome:s?`${s.corredor} - ${s.prateleira} - ${s.secao}`:void 0,localizacao_destino_nome:c?`${c.corredor} - ${c.prateleira} - ${c.secao}`:void 0}})}catch(t){throw console.error("Erro ao buscar movimentações enriquecidas:",t),new Error("Erro ao buscar movimentações")}}async getById(t){return(await this.getAll()).find(o=>o.id===t)}async getByProduct(t){return(await this.getAll()).filter(o=>o.id_produto===t)}async getByType(t){return(await this.getAll()).filter(o=>o.tipo_movimento===t)}async create(t){const r=await this.getAll(),o=r.length>0?Math.max(...r.map(n=>n.id))+1:1,a={...t,id:o,data_mov:new Date().toISOString()};r.push(a);try{return await m.put(this.endpoint,new l(r).toNestedArray()),a}catch{throw new Error("Erro ao criar movimentação")}}async update(t,r){const o=await this.getAll(),a=o.findIndex(d=>d.id===t);if(a===-1)throw new Error("Movimentação não encontrada");const n=o[a];if(!n)throw new Error("Movimentação não encontrada");const i={...n,...r,id:n.id};o[a]=i;try{return await m.put(this.endpoint,new l(o).toNestedArray()),i}catch{throw new Error("Erro ao atualizar movimentação")}}async delete(t){const o=(await this.getAll()).filter(a=>a.id!==t);try{await m.put(this.endpoint,new l(o).toNestedArray())}catch{throw new Error("Erro ao excluir movimentação")}}}const $=new M;export{$ as M};
